[
  {
    "title": "Limited Security Token Assessment",
    "repos": [
      {
        "hash": "9f13fd8",
        "link": "https://github.com/tokensoft/1404_token/commit/fd865febbe56d215b4220c1a2d8d37728605"
      },
      {
        "hash": "16dh643",
        "link": "https://github.com/tokensoft/1404_token/commit/a6437a633c2e660416f4050aab14527393a8a"
      }
    ],
    "type": "Token",
    "start_date": "2019-12-03",
    "end_date": "2019-12-12",
    "auditors": ["Alex Murashkin", "Leonard", "Jan Gorzny"],
    "specification": [
      "https://github.com/tokensoft/1404_token/blob/9f13fd865febbe56d215b4220c1a2d8d37728605/README.md"
    ],
    "adherence_to_specification": "The code mostly matches the comments and the `README` documentation. The major case of a mismatch was written in the finding `QSP-4 Unclear Expected Token Supply`.",
    "best_practices": "The code mostly adheres to the best coding practices, however, highlighted a few cases that could use improvement:\n- Use of `block.timestamp` as noted in the finding `QSP-1` - **Acknowledged**\n- Input validation is missing:\n    - `restrictions/TransferRestrictions.sol`,  `L21` (commit `16da643`): potentially, needs a check whether `_validators` is a non-zero address - **Fixed**\n    - `capabilities/Timelockable.sol`, `L31` (commit `16da643`): recommended checking that `amount` is greater than 0\n    - `capabilities/Timelockable.sol`, `L46` (commit `16da643`): recommended checking that `amountToRelease` is greater than 0\n    - `InxToken.sol`, `L51` (commit `16da643`):  recommended checking that `_newRestrictionsAddress` is a non-zero address\n- All role definitions (such as `PauserRole`, `TimelockerRole`, etc.) in the `roles` folder look similar to each other and could use refactoring. However, given the state of the project and the timeline, it could be impractical.",
    "code_documentation": "Most of the code is well-documented, however, there are instances that could use improvement:\n\n1. `README.md`, `L58` (commit `16da643`):  it is likely that the command to run coverage is `npm run solcover` rather than `npm run coverage`\n2. Files under the `roles` folder are missing code comments\n3. `RestrictionMessages.sol`, `L11`, `Whitelistable.sol`, `L20` and `L24` (commit `16da643`), and the corresponding test files: \"white list\" should likely be \"whitelist\"\n4. `Pausable.sol`, `L22` and `L30` (commit `16da643`): \"owner\"  in `called by the owner` should likely be reworded to disambiguate from the `owner` role - **Fixed**.",
    "code_coverage_text": "Test coverage is fairly high and meets our expectations. While having a perfect branch coverage is not a requirement, it is recommended to inspect the uncovered branches and consider adding tests if these cases are deemed to be significant.",
    "code_coverage_data": "-------------------------------|----------|----------|----------|----------|----------------|\nFile                           |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |\n-------------------------------|----------|----------|----------|----------|----------------|\n contracts/                    |      100 |      100 |      100 |      100 |                |\n  InxToken.sol                 |      100 |      100 |      100 |      100 |                |\n contracts/1404/               |      100 |      100 |      100 |      100 |                |\n  IERC1404.sol                 |      100 |      100 |      100 |      100 |                |\n  IERC1404Validators.sol       |      100 |      100 |      100 |      100 |                |\n contracts/capabilities/       |      100 |    78.57 |      100 |      100 |                |\n  Pausable.sol                 |      100 |      100 |      100 |      100 |                |\n  Revocable.sol                |      100 |      100 |      100 |      100 |                |\n  Timelockable.sol             |      100 |    78.57 |      100 |      100 |                |\n  Whitelistable.sol            |      100 |      100 |      100 |      100 |                |\n contracts/restrictions/       |    95.83 |    94.44 |      100 |    95.83 |                |\n  RestrictionMessages.sol      |      100 |      100 |      100 |      100 |                |\n  TransferRestrictions.sol     |      100 |      100 |      100 |      100 |                |\n  TransferRestrictionsNone.sol |       80 |       50 |      100 |       80 |             40 |\n contracts/roles/              |      100 |    83.33 |      100 |      100 |                |\n  OwnerRole.sol                |      100 |       75 |      100 |      100 |                |\n  PauserRole.sol               |      100 |      100 |      100 |      100 |                |\n  RevokerRole.sol              |      100 |      100 |      100 |      100 |                |\n  TimelockerRole.sol           |      100 |      100 |      100 |      100 |                |\n  WhitelisterRole.sol          |      100 |       50 |      100 |      100 |                |\n-------------------------------|----------|----------|----------|----------|----------------|\nAll files                      |    99.19 |     87.5 |      100 |    99.23 |                |\n-------------------------------|----------|----------|----------|----------|----------------|",
    "test_suite_text": "All tests pass.",
    "test_suite_data": "   Contract: 1404 Restrictions\n    ✓ should deploy\n    ✓ should fail if TransferRestrictions are not set (106ms)\n    ✓ should fail with non whitelisted accounts (307ms)\n    ✓ should fail if tokens are timelocked (362ms)\n    ✓ should fail if contract is paused (275ms)\n    ✓ should handle unknown error codes\n\n  Contract: InxToken\n    ✓ should deploy\n    ✓ owner owns 200,000,000 inx\n    ✓ should have correct details set (57ms)\n    ✓ should mint tokens to owner (64ms)\n    ✓ should mint tokens to different owner (53ms)\n\n  Contract: OwnerRole\n    ✓ should deploy and set owner\n    ✓ should allow an owner to add/remove owners (121ms)\n    ✓ should not allow a non owner to add/remove owners (358ms)\n    ✓ should not allow an owner to add 0x0 owner\n    ✓ should emit events for adding owners (54ms)\n    ✓ should emit events for removing owners (76ms)\n\n  Contract: Pausable\n    ✓ should allow the pauser to pause/unpause (140ms)\n    ✓ should not allow non pausers to pause/unpause (382ms)\n    ✓ should block transfers when paused and allow transfers when unpaused (445ms)\n\n  Contract: PauserRole\n    ✓ Owner should be able to add/remove pauser (103ms)\n    ✓ Non owner should not be able to add/remove pauser\n    ✓ Add pauser should fire event\n    ✓ Remove pauser should fire event (75ms)\n\n  Contract: Revocable\n    ✓ Revoker should be able to revoke tokens from any account (327ms)\n    ✓ Non revokers should not be able to revoke tokens (303ms)\n    ✓ should emit event when tokens are revoked (275ms)\n\n  Contract: RevokerRole\n    ✓ Owner should be able to add/remove revoker (103ms)\n    ✓ Non owner should not be able to add/remove revoker\n    ✓ Add revoker should fire event\n    ✓ Remove revoker should fire event (85ms)\n\n  Contract: Timelockable\n    ✓ Owner should be able to lock/release tokens (695ms)\n    ✓ Owner should be able to update timelocks (206ms)\n    ✓ Owner should be able to release timelocks (183ms)\n    ✓ Expired timelocks should not prevent transfers (3393ms)\n    ✓ Non owners should not be able to lock/release tokens (555ms)\n    ✓ should emit event when tokens are locked (128ms)\n    ✓ should emit event when tokens are released (262ms)\n\n  Contract: TimelockerRole\n    ✓ Owner should be able to add/remove timelocker (162ms)\n    ✓ Non owner should not be able to add/remove timelocker\n    ✓ Add timelocker should fire event (46ms)\n    ✓ Remove timelocker should fire event (88ms)\n    ✓ Owner should be able to add/remove whitelister (174ms)\n    ✓ Non owner should not be able to add/remove whitelister\n    ✓ Add whitelister should fire event (48ms)\n    ✓ Remove whitelister should fire event (109ms)\n\n  Contract: Transfers\n    ✓ should deploy\n    ✓ All users should be blocked from sending to non whitelisted non role-assigned accounts (404ms)\n    ✓ Initial transfers should fail but succeed after white listing (520ms)\n    ✓ Initial transferFroms should fail but succeed after white listing (676ms)\n\n  Contract: Upgrade Restrictions\n    ✓ should deploy\n    ✓ The TransferRestrictions cannot be deployed with the _validators param of 0x0 (60ms)\n    ✓ The TransferRestrictions address should be updateable by owners (119ms)\n    ✓ The TransferRestrictions address should no be updateable by non owners (738ms)\n    ✓ Restricted transfers should succeed after removing restrictions (331ms)\n    ✓ Updating restriction should fire event (183ms)\n\n  Contract: Whitelistable\n    ✓ Whitelister should be able to set whitelist (89ms)\n    ✓ Only transfer between whitelisted accounts should succeed (283ms)\n\n  Contract: WhitelisterRole\n    ✓ Owner should be able to add/remove whitelister (272ms)\n    ✓ Non owner should not be able to add/remove whitelister\n    ✓ Add whitelister should fire event (184ms)\n    ✓ Remove whitelister should fire event (212ms)\n\n\n  62 passing (34s)",
    "published": false,
    "url": "https://al.com/editor/76",
    "contract_signatures": [
      {
        "filename": "contracts/InxToken.sol",
        "signature": "e1d2e1d04bcebbcc02e37da6521bc53fd8cc0ee7cc1e558b29319b1eb3a1a045"
      },
      {
        "filename": "contracts/Migrations.sol",
        "signature": "ff98ae1d2490675979a38b1e5fe5bcf6b9b7f9f2b36dc3a3f8e1f2531bd9eb41"
      },
      {
        "filename": "contracts/roles/OwnerRole.sol",
        "signature": "f1f6789294c59c5fee1cb934f1ea261b48459f9ef3b79a2761e8dda20dc2246b"
      },
      {
        "filename": "contracts/roles/PauserRole.sol",
        "signature": "f25b8a14b92ab8144a45937908fa0e269ab37ab8d9384f8424d99dbf90988d8c"
      },
      {
        "filename": "contracts/roles/RevokerRole.sol",
        "signature": "53d299a2c408b47bf587dc657d43ddd22c97b05bec5d2bf2db0e20a159424c2b"
      },
      {
        "filename": "contracts/roles/TimelockerRole.sol",
        "signature": "647a7aba7f1c189597f61f9f9dc7f7cb62b6717d411669295f33c178abd6f869"
      },
      {
        "filename": "contracts/roles/WhitelisterRole.sol",
        "signature": "046a7d94fac7f496f2e6bdd0255fa827798e52e6a366921219f6fa10fc6a6ef6"
      },
      {
        "filename": "contracts/restrictions/RestrictionMessages.sol",
        "signature": "3f476d6315b0be711775df7b2fc9ed456d43252a2a8096ecfbc4d33348b477a4"
      },
      {
        "filename": "contracts/restrictions/TransferRestrictions.sol",
        "signature": "4762631b03c6342473d2caa6a560d7231678814b22d800e2794980a6398e1756"
      },
      {
        "filename": "contracts/restrictions/TransferRestrictionsNone.sol",
        "signature": "8c7cac731e71f83e8e2bbed9b26f8372f99d8a6bf948e4d50710e5c7d0182545"
      },
      {
        "filename": "contracts/capabilities/Pausable.sol",
        "signature": "84f0b4598c79a5f916b20cf813a0dbffb5e624841b47ea8f56d1f8dcafb77748"
      },
      {
        "filename": "contracts/capabilities/Revocable.sol",
        "signature": "2c08143bc37b8616cc8b3980ca5eac13d5cb18b1b2f77c42a09fab1adedfec32"
      },
      {
        "filename": "contracts/capabilities/Timelockable.sol",
        "signature": "10713f9259bcc5ba6cd3a7a291f3a6aad327374d1895ba284737d1195382b23c"
      },
      {
        "filename": "contracts/capabilities/Whitelistable.sol",
        "signature": "ace121652c3e1fc36d92ff351c0f5d68a2d82fca23de04a15c51bd888dd5681c"
      },
      {
        "filename": "contracts/1404/IERC1404.sol",
        "signature": "b7aa075ea5571d9111ffdfecd6cc9a421e6713734a83fe9078b050e29264eefc"
      },
      {
        "filename": "contracts/1404/IERC1404Validators.sol",
        "signature": "653818e01543f0854ab84aa6a36ae99a15a51a5e378bea926365b6149481e0b3"
      }
    ],
    "test_signatures": [
      {
        "filename": "test/1404Restrictions.js",
        "signature": "a6c3a83b8fdb32658f754b60b3101fd6d4d651cfcd13709bf50375eb0e23b8d2"
      },
      {
        "filename": "test/InxToken.js",
        "signature": "60e44aa135123552b9ffac884117431c639a0bd1d9b251b06b6c57189216d46e"
      },
      {
        "filename": "test/OwnerRole.js",
        "signature": "989c01e15599e529b54517d0cc2ec11691b7843171fd90859549eae135c79896"
      },
      {
        "filename": "test/Pausable.js",
        "signature": "59d6f018b3dfc56a250277a213d183a370bcd56b27a484748b8b42ac06c1a8a1"
      },
      {
        "filename": "test/PauserRole.js",
        "signature": "3a5dbab0dbcbe6cf62237f45e21d83dd3a5785a17aa1efbe6c59ecf56e06f884"
      },
      {
        "filename": "test/Revocable.js",
        "signature": "b9f3a86658b0259245c38530b4befab046b7d9dd9dbf5050db10f847bc2b21cc"
      },
      {
        "filename": "test/RevokerRole.js",
        "signature": "ec073d650358c9e64670f21df48259faa6ddb79ca0e01a56b4c5f901f5bc2c6b"
      },
      {
        "filename": "test/Timelockable.js",
        "signature": "b27f8fb8929eaab3a05940308e6b1f8125a4902932f8b075985a999a016ca76b"
      },
      {
        "filename": "test/TimelockerRole.js",
        "signature": "6ad8c74243495a45cc04faeebe0a0058b49b55ddf10177a882a641eacd877479"
      },
      {
        "filename": "test/Transfers.js",
        "signature": "25243b1a999c731db4448c1e66cec4fb41b90d5247fdeae200682b5383a0aff8"
      },
      {
        "filename": "test/UpgradeRestrictions.js",
        "signature": "a6e41032e9c032e67504e7b1a3302c8b4b81894251aaf8e120fd844add1a8d3f"
      },
      {
        "filename": "test/Whitelistable.js",
        "signature": "2521ec05e245140b2663b96ea9158a04a559dbdbb88731e66a0503f38dc8cc7c"
      },
      {
        "filename": "test/WhitelistRole.js",
        "signature": "9341f53b54a93e2ef5d87fdaebf5c067e4bd5f3ac26e87ef0953a5380b15e739"
      }
    ],
    "tools": [
      {
        "name": "Maian",
        "version": "commit sha: ab387e1",
        "url": "https://github.com/MAIAN-tool/MAIAN",
        "results": ""
      },
      {
        "name": "Truffle",
        "version": "v4.1.12",
        "url": "https://truffleframework.com/",
        "results": ""
      },
      {
        "name": "Ganache",
        "version": "v1.1.0",
        "url": "https://truffleframework.com/ganache",
        "results": ""
      },
      {
        "name": "SolidityCoverage",
        "version": "v0.5.8",
        "url": "https://github.com/sc-forks/solidity-coverage",
        "results": ""
      },
      {
        "name": "Mythril",
        "version": "v0.2.7",
        "url": "https://github.com/ConsenSys/mythril",
        "results": ""
      },
      {
        "name": "Truffle-Flattener",
        "version": "v0.18.9",
        "url": "https://github.com/alcuadrado/truffle-flattener",
        "results": ""
      },
      {
        "name": "Securify",
        "version": "None",
        "url": "https://github.com/eth-sri/securify",
        "results": ""
      },
      {
        "name": "Slither",
        "version": "v0.6.6",
        "url": "https://github.com/crytic/slither",
        "results": ""
      }
    ],
    "findings": [
      {
        "id": 0,
        "title": "Unclear Expected Locking Behaviour",
        "severity": "Low",
        "files_involved": ["capabilities/Timelockable.sol"],
        "description": "Repeated calls to the `lock` method override the previous locks set for the given token holder. In addition, if multiple `lock(...)` transactions are sent at the same time, a hypothetical miner holding the tokens could choose to mine the transaction that is more favorable to the miner, thus making the contract vulnerable to transaction ordering.",
        "exploit_scenario": "",
        "recommendation": "\n1. Documenting the expected behaviour when `lock` is called multiple times\n2. If the transaction ordering behaviour is undesired, consider adding `increaseLock(...)` and `decreaseLock(...)` methods\n\n**Update**: Tokensoft has acknowledged the issue and added the following comment on transaction ordering to `README.md`: \"Care should be taken not to send out multiple 'lock' transactions at once as the last transaction mined will be the values that are persisted.\"  as of commit `9f13fd8`. Tokensoft has confirmed this is expected behavior and the risk has been documented. "
      },
      {
        "id": 1,
        "title": "Block Timestamp Manipulation",
        "severity": "Low",
        "files_involved": ["capabilities/Timelockable.sol"],
        "description": "Projects may rely on block timestamps for various purposes. However, it's important to realize that miners individually set the timestamp of a block, and attackers may be able to manipulate timestamps for their own purposes. If a smart contract relies on a timestamp, it must take this into account.\n\nThe locking mechanism is based on `block.timestamp`. Miners who happen to hold INX tokens could delay the release of tokens of other token holders as a means to get a trading advantage. \n",
        "exploit_scenario": "",
        "recommendation": "\n1. Changing the logic to rely on `block.number` as a means to control locking/releasing instead of `block.timestamp`\n2. Requiring large minimum locking period in order to minimize the effect of timestamp manipulation.\n\n**Update**: Tokensoft has acknowledged the use of `block.timestamp` and noted: \"The block.timestamp is used to determine if a Timelock is expired, the block.timestamp is set by miners and not guaranteed to be accurate, it can differ from the true time by as much as 15 seconds.\" in `README.md` as of commit `9f13fd8`. Tokensoft has confirmed this is expected behavior and the risk has been documented. "
      },
      {
        "id": 2,
        "title": "Privileged Roles and Ownership",
        "severity": "Low",
        "files_involved": [""],
        "description": "Smart contracts will often have `owner` variables to designate the person with special privileges to make modifications to the smart contract.\n\nIn this case, the owner is capable of granting any Ethereum account (including the owner themselves) an ability to revoke tokens from an arbitrary\naccount or time-locking tokens of an arbitrary account. If an owner's private key is compromised, all users become automatically at risk.\n\nConsequently, for the purposes of this audit, we assume that the administrator and price feeds are available, honest, and not compromised.",
        "exploit_scenario": "",
        "recommendation": "While the owner privileges are documented in the `README.md` file, the centralization of power needs to be made clear to the end-users also.\n\n\n**Update**: Tokensoft has acknowledged the owner variables that designate a person with special privileges can make modifications to the smart contract. They have noted “The Owner account specified at the time of deployment will be the only owner account by default. Since Owners can assign Revoker, Timelocker, and Whitelister privileges to themselves they have the ability to unilaterally impact trading capabilities and even token balances for all users.” in `README.md` as of commit `9f13fd8`. Tokensoft has confirmed this is expected behavior and the risk has been documented\n"
      },
      {
        "id": 3,
        "title": "Unclear Expected Token Supply",
        "severity": "Informational",
        "files_involved": ["InxToken.sol"],
        "description": "`InxToken.sol`, `L21` (commit `16da643`): the comment says `Token supply - 2 Hundred Thousand Tokens, with 18 decimal precision`, while the constant `HUNDRED_THOUSAND` is set to `100000000`, which is one hundred million, thus making `TOKEN_SUPPLY` being two hundred million.\n",
        "exploit_scenario": "",
        "recommendation": "\n1. Documenting the expected behaviour and fixing the code comments, if applicable\n2. Making a code change to the constant, if applicable.\n\n\n**Update**: Tokensoft has adjusted variable naming as of commit `9f13fd8`. Tokensoft has documented the token supply in the README: \"On deployment, all tokens will be transferred to the owner account passed in during deployment. The total supply will be 200,000,000 tokens.\"\n"
      }
    ],
    "total_issues": [
      {
        "severity": "Undetermined",
        "issues_found": 10,
        "issues_resolved": 11,
        "issues_acknowledged": 12
      },
      {
        "severity": "Informational",
        "issues_found": 13,
        "issues_resolved": 14,
        "issues_acknowledged": 15
      },
      { "severity": "Low", "issues_found": 1, "issues_resolved": 2, "issues_acknowledged": 3 },
      { "severity": "Medium", "issues_found": 4, "issues_resolved": 5, "issues_acknowledged": 6 },
      { "severity": "High", "issues_found": 7, "issues_resolved": 8, "issues_acknowledged": 9 }
    ]
  }
]
